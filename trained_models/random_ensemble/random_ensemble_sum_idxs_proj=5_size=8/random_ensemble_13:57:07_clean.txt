
Loading mnist.
('x_train shape:', (60000, 28, 28, 1), '\nx_test shape:', (10000, 28, 28, 1))

Computing random projections.
('Input shape: ', (60000, 28, 28, 1))
('Projected data shape:', (5, 60000, 8, 8, 1))
('\nTraining infos:\nbatch_size = ', 128, '\nepochs =', 12, '\nx_train.shape = ', (60000, 8, 8, 1), '\ny_train.shape = ', (60000, 10), '\n')
Epoch 1/12

469/468 [==============================] - 2s 5ms/step - loss: 1.1686 - acc: 0.6096
Epoch 2/12

469/468 [==============================] - 2s 5ms/step - loss: 0.7759 - acc: 0.7501
Epoch 3/12

469/468 [==============================] - 2s 5ms/step - loss: 0.7111 - acc: 0.7721
Epoch 4/12

469/468 [==============================] - 2s 5ms/step - loss: 0.6644 - acc: 0.7878
Epoch 5/12

469/468 [==============================] - 2s 5ms/step - loss: 0.6372 - acc: 0.7953
Epoch 6/12

469/468 [==============================] - 2s 5ms/step - loss: 0.6122 - acc: 0.8047
Epoch 7/12

469/468 [==============================] - 2s 5ms/step - loss: 0.5898 - acc: 0.8109
Epoch 8/12

469/468 [==============================] - 2s 5ms/step - loss: 0.5856 - acc: 0.8134
Epoch 9/12

469/468 [==============================] - 2s 5ms/step - loss: 0.5637 - acc: 0.8201
Epoch 10/12

469/468 [==============================] - 2s 5ms/step - loss: 0.5508 - acc: 0.8217
Epoch 11/12

469/468 [==============================] - 2s 5ms/step - loss: 0.5407 - acc: 0.8274
Epoch 12/12

469/468 [==============================] - 2s 5ms/step - loss: 0.5339 - acc: 0.8323
('\nTraining infos:\nbatch_size = ', 128, '\nepochs =', 12, '\nx_train.shape = ', (60000, 8, 8, 1), '\ny_train.shape = ', (60000, 10), '\n')
Epoch 1/12

469/468 [==============================] - 2s 5ms/step - loss: 1.3218 - acc: 0.5580
Epoch 2/12

469/468 [==============================] - 2s 5ms/step - loss: 0.9379 - acc: 0.6898
Epoch 3/12

469/468 [==============================] - 2s 5ms/step - loss: 0.8631 - acc: 0.7165
Epoch 4/12

469/468 [==============================] - 2s 5ms/step - loss: 0.8169 - acc: 0.7298
Epoch 5/12

469/468 [==============================] - 2s 5ms/step - loss: 0.7879 - acc: 0.7413
Epoch 6/12

469/468 [==============================] - 2s 5ms/step - loss: 0.7653 - acc: 0.7480
Epoch 7/12

469/468 [==============================] - 2s 5ms/step - loss: 0.7408 - acc: 0.7567
Epoch 8/12

469/468 [==============================] - 2s 5ms/step - loss: 0.7259 - acc: 0.7611
Epoch 9/12

469/468 [==============================] - 2s 5ms/step - loss: 0.7152 - acc: 0.7654
Epoch 10/12

469/468 [==============================] - 2s 5ms/step - loss: 0.7033 - acc: 0.7698
Epoch 11/12

469/468 [==============================] - 2s 5ms/step - loss: 0.6851 - acc: 0.7759
Epoch 12/12

469/468 [==============================] - 2s 5ms/step - loss: 0.6872 - acc: 0.7746
('\nTraining infos:\nbatch_size = ', 128, '\nepochs =', 12, '\nx_train.shape = ', (60000, 8, 8, 1), '\ny_train.shape = ', (60000, 10), '\n')
Epoch 1/12

469/468 [==============================] - 3s 5ms/step - loss: 1.1622 - acc: 0.6138
Epoch 2/12

469/468 [==============================] - 2s 5ms/step - loss: 0.7703 - acc: 0.7512
Epoch 3/12

469/468 [==============================] - 2s 5ms/step - loss: 0.7001 - acc: 0.7749
Epoch 4/12

469/468 [==============================] - 2s 5ms/step - loss: 0.6513 - acc: 0.7905
Epoch 5/12

469/468 [==============================] - 2s 5ms/step - loss: 0.6192 - acc: 0.8016
Epoch 6/12

469/468 [==============================] - 2s 5ms/step - loss: 0.5914 - acc: 0.8095
Epoch 7/12

469/468 [==============================] - 2s 5ms/step - loss: 0.5758 - acc: 0.8156
Epoch 8/12

469/468 [==============================] - 2s 5ms/step - loss: 0.5647 - acc: 0.8198
Epoch 9/12

469/468 [==============================] - 2s 5ms/step - loss: 0.5466 - acc: 0.8244
Epoch 10/12

469/468 [==============================] - 2s 5ms/step - loss: 0.5377 - acc: 0.8282
Epoch 11/12

469/468 [==============================] - 2s 5ms/step - loss: 0.5259 - acc: 0.8312
Epoch 12/12

469/468 [==============================] - 2s 5ms/step - loss: 0.5188 - acc: 0.8340
('\nTraining infos:\nbatch_size = ', 128, '\nepochs =', 12, '\nx_train.shape = ', (60000, 8, 8, 1), '\ny_train.shape = ', (60000, 10), '\n')
Epoch 1/12

469/468 [==============================] - 3s 6ms/step - loss: 1.2033 - acc: 0.5957
Epoch 2/12

469/468 [==============================] - 2s 5ms/step - loss: 0.8257 - acc: 0.7287
Epoch 3/12

469/468 [==============================] - 2s 5ms/step - loss: 0.7503 - acc: 0.7533
Epoch 4/12

469/468 [==============================] - 2s 5ms/step - loss: 0.7110 - acc: 0.7690
Epoch 5/12

469/468 [==============================] - 2s 5ms/step - loss: 0.6759 - acc: 0.7797
Epoch 6/12

469/468 [==============================] - 2s 5ms/step - loss: 0.6513 - acc: 0.7882
Epoch 7/12

469/468 [==============================] - 2s 5ms/step - loss: 0.6380 - acc: 0.7906
Epoch 8/12

469/468 [==============================] - 2s 5ms/step - loss: 0.6109 - acc: 0.7980
Epoch 9/12

469/468 [==============================] - 2s 5ms/step - loss: 0.5989 - acc: 0.8048
Epoch 10/12

469/468 [==============================] - 2s 5ms/step - loss: 0.5971 - acc: 0.8042
Epoch 11/12

469/468 [==============================] - 2s 5ms/step - loss: 0.5856 - acc: 0.8073
Epoch 12/12

469/468 [==============================] - 2s 5ms/step - loss: 0.5716 - acc: 0.8117
('\nTraining infos:\nbatch_size = ', 128, '\nepochs =', 12, '\nx_train.shape = ', (60000, 8, 8, 1), '\ny_train.shape = ', (60000, 10), '\n')
Epoch 1/12

469/468 [==============================] - 3s 6ms/step - loss: 1.1088 - acc: 0.6252
Epoch 2/12

469/468 [==============================] - 2s 5ms/step - loss: 0.7256 - acc: 0.7586
Epoch 3/12

469/468 [==============================] - 2s 5ms/step - loss: 0.6509 - acc: 0.7869
Epoch 4/12

469/468 [==============================] - 2s 5ms/step - loss: 0.6143 - acc: 0.7981
Epoch 5/12

469/468 [==============================] - 2s 5ms/step - loss: 0.5814 - acc: 0.8076
Epoch 6/12

469/468 [==============================] - 2s 5ms/step - loss: 0.5595 - acc: 0.8172
Epoch 7/12

469/468 [==============================] - 2s 5ms/step - loss: 0.5476 - acc: 0.8208
Epoch 8/12

469/468 [==============================] - 2s 5ms/step - loss: 0.5281 - acc: 0.8283
Epoch 9/12

469/468 [==============================] - 2s 5ms/step - loss: 0.5187 - acc: 0.8295
Epoch 10/12

469/468 [==============================] - 2s 5ms/step - loss: 0.5003 - acc: 0.8354
Epoch 11/12

469/468 [==============================] - 2s 5ms/step - loss: 0.4978 - acc: 0.8352
Epoch 12/12

469/468 [==============================] - 2s 5ms/step - loss: 0.4902 - acc: 0.8389
('\nTesting infos:\nx_test.shape = ', (10000, 28, 28, 1), '\ny_test.shape = ', (10000, 10), '\n')

Computing random projections.
('Input shape: ', (10000, 28, 28, 1))
('Projected data shape:', (5, 10000, 8, 8, 1))

Computing random projections.
('Input shape: ', (10000, 28, 28, 1))
('Projected data shape:', (5, 10000, 8, 8, 1))
('Test evaluation on projection ', 0)
('\nTesting infos:\nx_test.shape = ', (10000, 8, 8, 1), '\ny_test.shape = ', (10000, 10), '\n')

Original test data.
Correctly classified: 8590
Incorrectly classified: 1410
Test accuracy: 0.00%
              precision    recall  f1-score   support

           0       0.90      0.93      0.91       980
           1       0.95      0.97      0.96      1135
           2       0.86      0.87      0.87      1032
           3       0.80      0.82      0.81      1010
           4       0.88      0.88      0.88       982
           5       0.82      0.71      0.76       892
           6       0.89      0.91      0.90       958
           7       0.90      0.83      0.86      1028
           8       0.78      0.76      0.77       974
           9       0.80      0.87      0.83      1009

   micro avg       0.86      0.86      0.86     10000
   macro avg       0.86      0.86      0.86     10000
weighted avg       0.86      0.86      0.86     10000

('Test evaluation on projection ', 1)
('\nTesting infos:\nx_test.shape = ', (10000, 8, 8, 1), '\ny_test.shape = ', (10000, 10), '\n')

Original test data.
Correctly classified: 8174
Incorrectly classified: 1826
Test accuracy: 0.00%
              precision    recall  f1-score   support

           0       0.89      0.90      0.90       980
           1       0.91      0.98      0.94      1135
           2       0.89      0.83      0.86      1032
           3       0.77      0.78      0.77      1010
           4       0.81      0.75      0.78       982
           5       0.76      0.68      0.72       892
           6       0.78      0.86      0.82       958
           7       0.90      0.83      0.87      1028
           8       0.71      0.68      0.69       974
           9       0.74      0.84      0.78      1009

   micro avg       0.82      0.82      0.82     10000
   macro avg       0.82      0.81      0.81     10000
weighted avg       0.82      0.82      0.82     10000

('Test evaluation on projection ', 2)
('\nTesting infos:\nx_test.shape = ', (10000, 8, 8, 1), '\ny_test.shape = ', (10000, 10), '\n')

Original test data.
Correctly classified: 8687
Incorrectly classified: 1313
Test accuracy: 0.00%
              precision    recall  f1-score   support

           0       0.92      0.96      0.94       980
           1       0.93      0.98      0.96      1135
           2       0.87      0.85      0.86      1032
           3       0.82      0.83      0.83      1010
           4       0.84      0.84      0.84       982
           5       0.89      0.83      0.86       892
           6       0.90      0.92      0.91       958
           7       0.85      0.88      0.86      1028
           8       0.86      0.73      0.79       974
           9       0.80      0.84      0.82      1009

   micro avg       0.87      0.87      0.87     10000
   macro avg       0.87      0.87      0.87     10000
weighted avg       0.87      0.87      0.87     10000

('Test evaluation on projection ', 3)
('\nTesting infos:\nx_test.shape = ', (10000, 8, 8, 1), '\ny_test.shape = ', (10000, 10), '\n')

Original test data.
Correctly classified: 8420
Incorrectly classified: 1580
Test accuracy: 0.00%
              precision    recall  f1-score   support

           0       0.92      0.93      0.93       980
           1       0.90      0.98      0.93      1135
           2       0.90      0.79      0.84      1032
           3       0.85      0.81      0.83      1010
           4       0.82      0.73      0.77       982
           5       0.81      0.86      0.84       892
           6       0.91      0.91      0.91       958
           7       0.79      0.85      0.82      1028
           8       0.81      0.80      0.80       974
           9       0.72      0.75      0.73      1009

   micro avg       0.84      0.84      0.84     10000
   macro avg       0.84      0.84      0.84     10000
weighted avg       0.84      0.84      0.84     10000

('Test evaluation on projection ', 4)
('\nTesting infos:\nx_test.shape = ', (10000, 8, 8, 1), '\ny_test.shape = ', (10000, 10), '\n')

Original test data.
Correctly classified: 8716
Incorrectly classified: 1284
Test accuracy: 0.00%
              precision    recall  f1-score   support

           0       0.94      0.94      0.94       980
           1       0.94      0.97      0.95      1135
           2       0.90      0.90      0.90      1032
           3       0.88      0.87      0.87      1010
           4       0.86      0.85      0.86       982
           5       0.85      0.86      0.85       892
           6       0.92      0.93      0.92       958
           7       0.83      0.75      0.79      1028
           8       0.86      0.83      0.84       974
           9       0.72      0.82      0.77      1009

   micro avg       0.87      0.87      0.87     10000
   macro avg       0.87      0.87      0.87     10000
weighted avg       0.87      0.87      0.87     10000

('\nTesting infos:\nx_test.shape = ', (10000, 28, 28, 1), '\ny_test.shape = ', (10000, 10), '\n')

Computing random projections.
('Input shape: ', (10000, 28, 28, 1))
('Projected data shape:', (5, 10000, 8, 8, 1))

Original test data.
Correctly classified: 9376
Incorrectly classified: 624
Test accuracy: 0.00%
              precision    recall  f1-score   support

           0       0.96      0.98      0.97       980
           1       0.96      0.99      0.98      1135
           2       0.95      0.93      0.94      1032
           3       0.92      0.93      0.93      1010
           4       0.94      0.94      0.94       982
           5       0.94      0.92      0.93       892
           6       0.95      0.96      0.95       958
           7       0.94      0.91      0.92      1028
           8       0.94      0.89      0.91       974
           9       0.88      0.92      0.90      1009

   micro avg       0.94      0.94      0.94     10000
   macro avg       0.94      0.94      0.94     10000
weighted avg       0.94      0.94      0.94     10000

('\nAdversarial evaluation using', 'fgsm', 'method.')
(10000, 10000)

Computing random projections.
('Input shape: ', (10000, 28, 28, 1))
('Projected data shape:', (5, 10000, 8, 8, 1))

Adversarial test data.
Correctly classified: 3861
Incorrectly classified: 6139
Adversarial accuracy: 0.00%
              precision    recall  f1-score   support

           0       0.73      0.59      0.65       980
           1       0.83      0.00      0.01      1135
           2       0.38      0.69      0.49      1032
           3       0.33      0.73      0.46      1010
           4       0.57      0.25      0.35       982
           5       0.45      0.33      0.38       892
           6       0.54      0.56      0.55       958
           7       0.84      0.07      0.14      1028
           8       0.23      0.68      0.34       974
           9       0.41      0.01      0.02      1009

   micro avg       0.39      0.39      0.39     10000
   macro avg       0.53      0.39      0.34     10000
weighted avg       0.54      0.39      0.33     10000

